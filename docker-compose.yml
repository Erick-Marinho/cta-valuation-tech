services:
  # frontend:
  #   build: ./frontend
  #   container_name: frontend_app
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./frontend:/app
  #     # - node_modules:/app/node_modules
  #   environment:
  #     - NODE_ENV=development

  backend:
    build: ./backend
    container_name: backend_app
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    environment:
      - NODE_ENV=development
    depends_on:
      - db

  db:
    image: pgvector/pgvector:pg17
    container_name: pgvector-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=vector-db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
      
volumes:
  #node_modules:
  pgdata:
  prometheus_data:
  grafana_data:
