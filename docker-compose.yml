services:
  frontend:
    build: ./frontend
    container_name: frontend_app
    ports:
      - '${FRONTEND_PORT:-3000}:3000'
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_THEME=${REACT_APP_THEME:-light}
      - REACT_APP_DEFAULT_LANGUAGE=${REACT_APP_DEFAULT_LANGUAGE:-pt-BR}
      - REACT_APP_ENABLE_ANALYTICS=${REACT_APP_ENABLE_ANALYTICS:-false}
      - REACT_APP_ENABLE_CHAT_HISTORY=${REACT_APP_ENABLE_CHAT_HISTORY:-true}
      - REACT_APP_MAX_DOCS_UPLOAD=${REACT_APP_MAX_DOCS_UPLOAD:-10}
      - REACT_APP_CACHE_DURATION=${REACT_APP_CACHE_DURATION:-30}
      - REACT_APP_VERSION=${APP_VERSION:-1.0.0}
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: backend_app
    ports:
      - '${BACKEND_PORT:-8000}:8000'
    volumes:
      - ./backend:/app
      - ./documents:/app/documents
    env_file:
      - ./backend/.env
    command:
      ['uvicorn', 'app:app', '--host', '0.0.0.0', '--port', '8000', '--reload']
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/vectordb
      - DEBUG=${DEBUG:-true}
      - AUTO_INIT_DB=true
      # - API_KEY_NVIDEA=${API_KEY_NVIDEA}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-intfloat/multilingual-e5-large-instruct}
      - EMBEDDING_DIMENSION=${EMBEDDING_DIMENSION:-1024}
      - USE_GPU=${USE_GPU:-false}
      - CHUNK_SIZE=${CHUNK_SIZE:-800}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-100}
      - PORT=${BACKEND_PORT:-8000}
      - APP_NAME=${APP_NAME:-"CTA Value Tech"}
      - APP_VERSION=${APP_VERSION:-1.0.0}
    depends_on:
      - postgres
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health/ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_db
    ports:
      - '${POSTGRES_PORT:-5433}:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-vectordb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_data:
  node_modules:
  pgadmin_data:
