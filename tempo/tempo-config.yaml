# Configuração básica do Tempo para Docker Compose (Revisada 4 - Permissões /var/lib)

server:
  http_listen_port: 3200 # Porta que o Grafana usará para se conectar

distributor:
  receivers: # Define como o Tempo recebe spans
    otlp:
      protocols:
        grpc: # Habilita OTLP via gRPC (usado pelo seu backend)
          endpoint: 0.0.0.0:4317
        http: # Habilita OTLP via HTTP (opcional)
          endpoint: 0.0.0.0:4318

ingester:
  trace_idle_period: 10s # Quanto tempo esperar por mais spans de um trace
  # max_block_bytes: 1_000_000         # Tamanho máximo do bloco antes de flushar (default razoável)
  # max_block_duration: 5m             # Duração máxima do bloco antes de flushar (default razoável)

compactor:
  compaction:
    block_retention: 1h # Retenção curta para teste (aumente para produção, ex: 72h, 336h)
    compacted_block_retention: 10m # Retenção curta para blocos compactados (teste)

storage:
  trace:
    backend: local
    local:
      path: /var/lib/tempo/blocks
    pool:
      max_workers: 100 # Configuração do pool (ajuste conforme necessário)
      queue_depth: 10000

# Configuração para Service Graphs e TraceQL
metrics_generator:
  storage:
    path: /var/lib/tempo/generator/wal
    remote_write:
      - url: http://prometheus:9090/api/v1/write # Envia métricas geradas para o Prometheus
        send_exemplars: true
  processor:
    service_graphs:
      wait: 10s # Exemplo: esperar 10s antes de processar
    span_metrics:
      dimensions: # Adiciona dimensões úteis às métricas geradas (opcional)
        - http.method
        - http.status_code
        - db.system
        - error.type
      # Configurações adicionais de span metrics podem ir aqui
